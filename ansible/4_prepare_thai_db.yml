- hosts: all
  gather_facts: true
  vars:
    ansible_user: root
    thai_db_option: medium # small medium big
    # moved to hostvars
    # postgresql_version: 15

  tasks:
    - name: Download db file to localhost
      delegate_to: localhost
      block:
        - name: Check that the thai db file exists
          ansible.builtin.stat:
            path: "files/thai_{{ thai_db_option }}.tar.gz"
          register: local_stat_result

        - name: Download file from a file path
          ansible.builtin.get_url:
            url: "https://storage.googleapis.com/thaibus/thai_{{ thai_db_option }}.tar.gz"
            dest: "files/thai_{{ thai_db_option }}.tar.gz"
          when: not local_stat_result.stat.exists

    - name: Install db from template
      become: true
      become_user: postgres
      block:
        - name: Check that the thai db file exists
          ansible.builtin.stat:
            path: "/var/lib/postgresql/thai_{{ thai_db_option }}.tar.gz"
          register: remote_stat_result

        - name: Copy db file to postgres home
          ansible.builtin.copy:
            src: "files/thai_{{ thai_db_option }}.tar.gz"
            dest: "/var/lib/postgresql/thai_{{ thai_db_option }}.tar.gz"
            owner: postgres
            group: postgres
            mode: '0644'
            remote_src: false
          when: not remote_stat_result.stat.exists

        - name: remove file if exists
          ansible.builtin.file:
            path: /var/lib/postgresql/thai.sql
            state: absent
          when: not remote_stat_result.stat.exists
          
        - name: Unarchive db file
          ansible.builtin.unarchive:
            src: "/var/lib/postgresql/thai_{{ thai_db_option }}.tar.gz"
            dest: /var/lib/postgresql
            remote_src: yes
          when: not remote_stat_result.stat.exists

      # INIT PGBENCH FOR POSTGRES DB
        - name: init pgbench
          shell: pgbench -i postgres

      # CREATE THAI DB
        - name: DROP DATABASE thai
          community.postgresql.postgresql_db:
            name: thai
            state: absent
          when: not remote_stat_result.stat.exists

        - name: CREATE DATABASE thai
          community.postgresql.postgresql_db:
            name: thai

      # INIT PGBENCH FOR POSTGRES DB
        - name: init pgbench
          shell: pgbench -i thai

        - name: CREATE EXTENSION IF NOT EXISTS pg_stat_statements
          community.postgresql.postgresql_ext:
            name: pg_stat_statements
            db: thai
        - name: restore thai db from dump
          shell: psql -d thai < /var/lib/postgresql/thai.sql

        # Красиво но не пашет - msg: 'Cannot read file ''/var/lib/postgresql/thai.sql'' : '
        # https://github.com/ansible-collections/community.postgresql/issues/180
        # - name: Init thai db (psql -d thai < thai.sql)
        #   community.postgresql.postgresql_script:
        #     db: thai
        #     path: /var/lib/postgresql/thai.sql
        #   register: resulit
        
        # - name: Print init result
        #   ansible.builtin.debug:
        #     var: resulit.query
        # - name: Print init result
        #   ansible.builtin.debug:
        #     var: resulit.query_result
        # - name: Print init result
        #   ansible.builtin.debug:
        #     var: resulit.statusmessage # rowcount

        - name: Copy workload file to postgres home
          ansible.builtin.copy:
            src: "files/sql/workload.sql"
            dest: "/var/lib/postgresql/workload.sql"
            owner: postgres
            group: postgres
            mode: '0644'
            remote_src: false

