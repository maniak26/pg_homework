- hosts: all
  gather_facts: true
  vars:
    ansible_user: root
    thai_db_option: medium # small medium big
    # moved to hostvars
    # postgresql_version: 15

  tasks:
    - name: Download db file to localhost
      delegate_to: localhost
      block:
        - name: Check that the thai db file exists
          ansible.builtin.stat:
            path: "files/thai_{{ thai_db_option }}.tar.gz"
          register: stat_result
          # delegate_to: localhost

        - name: Download file from a file path
          ansible.builtin.get_url:
            url: "https://storage.googleapis.com/thaibus/thai_{{ thai_db_option }}.tar.gz"
            dest: "files/thai_{{ thai_db_option }}.tar.gz"
          # delegate_to: localhost
          when: not stat_result.stat.exists

    - name: Install db from template
      become: true
      become_user: postgres
      block:
        - name: Copy db file to postgres home
        # become: true
        # become_user: postgres
          ansible.builtin.copy:
            src: "files/thai_{{ thai_db_option }}.tar.gz"
            dest: "/var/lib/postgresql/thai_{{ thai_db_option }}.tar.gz"
            owner: postgres
            group: postgres
            mode: '0644'
            remote_src: false

        - name: remove file if exists
          ansible.builtin.file:
            path: /var/lib/postgresql/thai.sql
            state: absent
          
        - name: Unarchive db file
          # become: true
          # become_user: postgres
          ansible.builtin.unarchive:
            src: "/var/lib/postgresql/thai_{{ thai_db_option }}.tar.gz"
            dest: /var/lib/postgresql
            remote_src: yes
